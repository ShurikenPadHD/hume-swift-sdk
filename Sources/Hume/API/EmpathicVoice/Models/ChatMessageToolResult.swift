// This file is generated by generator.ts

public enum ChatMessageToolResult: Codable, Hashable {
  case toolResponseMessage(ToolResponseMessage)
  case toolErrorMessage(ToolErrorMessage)

  private enum CodingKeys: String, CodingKey {
    case type
  }
  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    let typeValue = try container.decode(String.self, forKey: .type)
    switch typeValue {
    case "tool_response": self = .toolResponseMessage(try ToolResponseMessage(from: decoder))
    case "tool_error": self = .toolErrorMessage(try ToolErrorMessage(from: decoder))
    default:
      throw DecodingError.dataCorruptedError(
        forKey: .type, in: container, debugDescription: "Unexpected type value: \(typeValue)")
    }
  }
  public func encode(to encoder: Encoder) throws {
    switch self {
    case .toolResponseMessage(let value): try value.encode(to: encoder)
    case .toolErrorMessage(let value): try value.encode(to: encoder)
    }
  }
}
